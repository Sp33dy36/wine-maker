package core;

import org.osbot.rs07.api.ui.Skill;
import org.osbot.rs07.script.Script;
import org.osbot.rs07.script.ScriptManifest;
import org.osbot.rs07.utility.ConditionalSleep;

@ScriptManifest(author = "CloudyMan", info = "Cloudy wine maker", name = "Cloudy wine maker", version = 2.0, logo = "https://imgur.com/a/0Ckrc7P")
public class Main extends Script {

    private static final String GRAPES = "Grapes";
    private static final String JUG_OF_WATER = "Jug of water";

    @Override
    public void onStart() {
        log("Script starting...");
        if (getSkills().getStatic(Skill.COOKING) < 35) {
            log("Cooking level too low to make wines - stopping");
            stop(true);
        }
    }

    @Override
    public int onLoop() throws InterruptedException {
        if (needToBank()) {
            bank();
        } else {
            makeWines();
        }
        return random(300, 500);
    }

    private boolean needToBank() {
        return !getInventory().contains(GRAPES) || !getInventory().contains(JUG_OF_WATER);
    }

    private void bank() throws InterruptedException {
        if (!getBank().isOpen()) {
            getBank().open();
            new ConditionalSleep(5000) {
                @Override
                public boolean condition() throws InterruptedException {
                    return getBank().isOpen();
                }
            }.sleep();
        }
        getBank().depositAll();
        sleep(random(800, 1200));
        getBank().withdraw(GRAPES, 14);
        sleep(random(800, 1200));
        getBank().withdraw(JUG_OF_WATER, 14);
        sleep(random(800, 1200));
        getBank().close();
    }

    private void makeWines() throws InterruptedException {
        log("Making wines...");
        getInventory().getItem(GRAPES).interact("Use");
        sleep(random(400, 600));
        getInventory().getItem(JUG_OF_WATER).interact();
        sleep(random(400, 600));
        getKeyboard().typeString("1", false);
        new ConditionalSleep(20000) {
            @Override
            public boolean condition() throws InterruptedException {
                return !getInventory().contains(GRAPES) || !getInventory().contains(JUG_OF_WATER);
            }
        }.sleep();
    }

    @Override
    public void onExit() {
        log("Thanks for using my wine maker <3");
    }
}
